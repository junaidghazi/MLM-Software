const mongoose = require('mongoose');
const userSchema = new mongoose.Schema({
    username: { type: String, required: true, unique: true },
    name: { type: String, required: true }, // User's full name
    mobileNumber: { type: String, required: true, unique: true }, // User's mobile number
    email: { type: String, required: true, unique: true }, // User's email address
    password: { type: String, required: true }, // Password (hashed)
    referralCode: { type: String, unique: true }, // Unique referral code
    referrals: [{ type: mongoose.Schema.Types.ObjectId, ref: 'User' }], // List of referred users
    level: { type: Number, default: 1 }, // User's level in the MLM
    achievements: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Achievement' }], // Achievements
    earnings: { type: Number, default: 0 }, // Total earnings

    // New fields based on your provided data
    id: { type: String,  unique: true }, // User's unique ID
    address: { type: String }, // User's address
    currentLevel: { type: Number, default: 1 }, // Current level in MLM
    loginDate: { type: Date, default: Date.now }, // Last login date
    totalTeamMembers: { type: Number, default: 0 }, // Total number of team members
    totalDirectTeam: { type: Number, default: 0 }, // Total number of direct team members
    selfBusiness: { type: Number, default: 0 }, // Business generated by the user
    teamBusiness: { type: Number, default: 0 }, // Business generated by the user's team
    totalBusiness: { type: Number, default: 0 }, // Total business (self + team)
    sponsors: [
        {
            name: { type: String },
            associateId: { type: String },
            sponsorId: { type: String },
            doj: { type: String } // Date of Joining
        }
    ], // Sponsor details
    notice: { type: String } // Notice or announcements for the user
});

module.exports = mongoose.model('User', userSchema);
